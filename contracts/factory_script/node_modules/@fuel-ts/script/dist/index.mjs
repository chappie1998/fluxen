import{arrayify as D}from"@ethersproject/bytes";import{VM_TX_MEMORY as C,TRANSACTION_SCRIPT_FIXED_SIZE as v,ASSET_ID_LEN as A,WORD_SIZE as d,CONTRACT_ID_LEN as w}from"@fuel-ts/abi-coder";import{ReceiptType as u,ByteArrayCoder as $}from"@fuel-ts/transactions";import{ZeroBytes32 as I}from"@fuel-ts/constants";import{ReceiptType as S}from"@fuel-ts/transactions";var T=["Success","Revert","OutOfGas","TransactionValidity","MemoryOverflow","ArithmeticOverflow","ContractNotFound","MemoryOwnership","NotEnoughBalance","ExpectedInternalContext","AssetIdNotFound","InputNotFound","OutputNotFound","WitnessNotFound","TransactionMaturity","InvalidMetadataIdentifier","MalformedCallStructure","ReservedRegisterNotWritable","ErrorFlag","InvalidImmediateValue","ExpectedCoinInput","MaxMemoryAccess","MemoryWriteOverlap","ContractNotInInputs","InternalBalanceOverflow","ContractMaxSize","ExpectedUnallocatedStack","MaxStaticContractsReached","TransferAmountCannotBeZero","ExpectedOutputVariable","ExpectedParentInternalContext","IllegalJump","NonZeroMessageOutputRecipient","ZeroedMessageOutputRecipient"],p="https://docs.rs/fuel-asm/latest/fuel_asm/enum.PanicReason.html";var E=e=>T.includes(e)?e:"unknown",g=e=>{if((e==null?void 0:e.type)==="failure"){let t=E(e.reason);return{doc:t!=="unknown"?`${p}#variant.${t}`:p,reason:t}}return{doc:p,reason:"unknown"}};var O=(e,t)=>typeof t=="bigint"?t.toString():t,N=(e,t)=>`${e===I?"script":e}: ${t}`,l=class extends Error{constructor(r,n,a){let h=JSON.stringify(g(r.status),null,2),f=r.receipts.filter(s=>s.type===S.Revert),y=f.length?`Reverts:
${f.map(({id:s,...c})=>N(s,`${c.val} ${JSON.stringify(c,O)}`)).join(`
`)}`:null,m=a.length?`Logs:
${JSON.stringify(a,null,2)}`:null,x=`Receipts:
${JSON.stringify(r.receipts.map(({type:s,...c})=>({type:S[s],...c})),O,2)}`;super(`${n}

${h}

${y?`${y}

`:""}${m?`${m}

`:""}${x}`);this.logs=a}};function _(e){let t=[...e.receipts],r=t.pop();if(!r)throw new Error("Expected scriptResultReceipt");if(r.type!==u.ScriptResult)throw new Error(`Invalid scriptResultReceipt type: ${r.type}`);let n=t.pop();if(!n)throw new Error("Expected returnReceipt");if(n.type!==u.Return&&n.type!==u.ReturnData&&n.type!==u.Revert)throw new Error(`Invalid returnReceipt type: ${n.type}`);return{code:r.result,gasUsed:r.gasUsed,receipts:t,scriptResultReceipt:r,returnReceipt:n,callResult:e}}var R=class{constructor(t,r,n){this.bytes=D(t),this.scriptDataEncoder=r,this.scriptResultDecoder=n}getScriptDataOffset(){return C+v+new $(this.bytes.length).encodedLength}getArgOffset(){return this.getScriptDataOffset()+A+d+w+d+d}encodeScriptData(t){return this.scriptDataEncoder(t)}decodeCallResult(t,r=[]){try{let n=_(t);return this.scriptResultDecoder(n)}catch(n){throw new l(t,n.message,r)}}};var X=new R("0x24000000",()=>new Uint8Array(0),()=>{});export{R as Script,l as ScriptResultDecoderError,X as returnZeroScript};
//# sourceMappingURL=index.mjs.map