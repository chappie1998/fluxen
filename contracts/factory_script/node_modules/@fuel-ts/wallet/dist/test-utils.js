"use strict";var q=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var j=Object.prototype.hasOwnProperty;var H=(o,r)=>()=>(o&&(r=o(o=0)),r);var J=(o,r)=>{for(var e in r)q(o,e,{get:r[e],enumerable:!0})},$=(o,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of G(r))!j.call(o,s)&&s!==e&&q(o,s,{get:()=>r[s],enumerable:!(t=V(r,s))||t.enumerable});return o};var X=o=>$(q({},"__esModule",{value:!0}),o);var i=H(()=>{});var ee={};J(ee,{generateTestWallet:()=>Z,seedTestWallet:()=>E});module.exports=X(ee);i();i();i();i();var l="http://127.0.0.1:4000/graphql";i();var k=require("@fuel-ts/hdwallet"),z=require("@fuel-ts/mnemonic"),K=require("@fuel-ts/signer");i();var h=require("@ethersproject/bytes"),B=require("@fuel-ts/address"),g=require("@fuel-ts/constants"),F=require("@fuel-ts/interfaces"),M=require("@fuel-ts/math"),m=require("@fuel-ts/providers"),x=require("@fuel-ts/transactions");var T=class extends F.AbstractWallet{constructor(e,t=l){super();this.provider=this.connect(t),typeof e=="string"?this._address=B.Address.fromString(e):this._address=(0,B.addressify)(e)}get address(){return this._address}connect(e){if(e)typeof e=="string"?this.provider?this.provider.connect(e):this.provider=new m.Provider(e):this.provider=e;else throw new Error("Provider is required");return this.provider}async getResourcesToSpend(e,t){return this.provider.getResourcesToSpend(this.address,e,t)}async getCoins(e){let t=[],n;for(;;){let a=await this.provider.getCoins(this.address,e,{first:9999,after:n});if(t.push(...a),!(a.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return t}async getMessages(){let e=[],s;for(;;){let n=await this.provider.getMessages(this.address,{first:9999,after:s});if(e.push(...n),!(n.length>=9999))break;throw new Error(`Wallets with more than ${9999} messages are not yet supported`)}return e}async getBalance(e=g.NativeAssetId){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],s;for(;;){let n=await this.provider.getBalances(this.address,{first:9999,after:s});if(e.push(...n),!(n.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),s=await this.getResourcesToSpend([t]);e.addResources(s)}async transfer(e,t,s=g.NativeAssetId,n={}){let a={gasLimit:x.MAX_GAS_PER_TX,...n},d=new m.ScriptTransactionRequest(a);d.addCoinOutput(e,t,s);let u=d.calculateFee(),f=[];u.assetId===(0,h.hexlify)(s)?(u.amount=u.amount.add(t),f=[u]):f=[[t,s],u];let v=await this.getResourcesToSpend(f);return d.addResources(v),this.sendTransaction(d)}async withdrawToBaseLayer(e,t,s={}){let n=(0,h.arrayify)("0x".concat(e.toHexString().substring(2).padStart(64,"0"))),a=(0,h.arrayify)("0x".concat((0,M.bn)(t).toHex().substring(2).padStart(16,"0"))),u={script:new Uint8Array([...(0,h.arrayify)(m.withdrawScript.bytes),...n,...a]),gasLimit:x.MAX_GAS_PER_TX,...s},f=new m.ScriptTransactionRequest(u);f.addMessageOutputs();let v=f.calculateFee(),U=[];v.amount=v.amount.add(t),U=[v];let I=await this.getResourcesToSpend(U);return f.addResources(I),this.sendTransaction(f)}async sendTransaction(e){let t=(0,m.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(t)}async simulateTransaction(e){let t=(0,m.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.simulate(t)}async buildPredicateTransaction(e,t,s=g.NativeAssetId,n){let a={fundTransaction:!0,...n},d=new m.ScriptTransactionRequest({gasLimit:x.MAX_GAS_PER_TX,...a});d.addCoinOutput(e,t,s);let u=[];if(a.fundTransaction&&u.push(d.calculateFee()),u.length){let f=await this.getResourcesToSpend(u);d.addResources(f)}return d}async submitPredicate(e,t,s=g.NativeAssetId,n){let a=await this.buildPredicateTransaction(e,t,s,n);return(await this.sendTransaction(a)).waitForResult()}async submitSpendPredicate(e,t,s,n=g.NativeAssetId,a){return this.provider.submitSpendPredicate(e,t,this.address,s,n,a)}};i();var L=require("@fuel-ts/hasher"),w=require("@fuel-ts/providers"),O=require("@fuel-ts/signer");var P=class extends T{constructor(e,t=l){let s=new O.Signer(e);super(s.address,t);this.signer=()=>s,this.provider=this.connect(t)}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}async signMessage(e){return this.signer().sign((0,L.hashMessage)(e))}async signTransaction(e){let t=(0,w.transactionRequestify)(e),s=(0,L.hashTransaction)(t);return this.signer().sign(s)}async populateTransactionWitnessesSignature(e){let t=(0,w.transactionRequestify)(e),s=await this.signTransaction(t);return t.updateWitnessByOwner(this.address,s),t}async sendTransaction(e){let t=(0,w.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(await this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=(0,w.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.call(await this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}};P.defaultPath="m/44'/1179993420'/0'/0/0";var b=class extends T{unlock(r){return new c(r,this.provider)}},c=class extends P{lock(){return this.signer=()=>new K.Signer("0x00"),new b(this.address,this.provider)}static generate(r){let e=K.Signer.generatePrivateKey(r==null?void 0:r.entropy);return new c(e,r==null?void 0:r.provider)}static fromSeed(r,e,t){let n=k.HDWallet.fromSeed(r).derivePath(e||c.defaultPath);return new c(n.privateKey,t)}static fromMnemonic(r,e,t,s){let n=z.Mnemonic.mnemonicToSeed(r,t),d=k.HDWallet.fromSeed(n).derivePath(e||c.defaultPath);return new c(d.privateKey,s)}static fromExtendedKey(r,e){let t=k.HDWallet.fromExtendedKey(r);return new c(t.privateKey,e)}};var y=class{static fromAddress(r,e=l){return new b(r,e)}static fromPrivateKey(r,e=l){return new c(r,e)}};y.generate=c.generate,y.fromSeed=c.fromSeed,y.fromMnemonic=c.fromMnemonic,y.fromExtendedKey=c.fromExtendedKey;i();i();i();i();i();var Y=require("@ethersproject/bytes");i();var A,W="Node";typeof globalThis<"u"&&globalThis.crypto&&(A=globalThis.crypto,W="Web");if(!A&&typeof require=="function")try{A=require("crypto"),W="Node"}catch(o){console.error("keystore expects a standard Web browser or Node environment.",o)}var R=A,C=W;i();var S=o=>C==="Node"?R.randomBytes(o):R.getRandomValues(new Uint8Array(o));i();var N=require("@fuel-ts/providers");var E=async(o,r)=>{let e=new c(process.env.GENESIS_SECRET||S(32),o.provider),t=await e.getResourcesToSpend(r),s=new N.ScriptTransactionRequest({gasLimit:1e4,gasPrice:1});s.addResources(t),r.map(N.coinQuantityfy).forEach(({amount:a,assetId:d})=>s.addCoinOutput(o.address,a,d)),await(await e.sendTransaction(s)).wait()};var Z=async(o,r)=>{let e=y.generate({provider:o});return r&&await E(e,r),e};0&&(module.exports={generateTestWallet,seedTestWallet});
//# sourceMappingURL=test-utils.js.map