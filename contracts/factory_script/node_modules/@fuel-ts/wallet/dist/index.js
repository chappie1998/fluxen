"use strict";var k=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var W=Object.prototype.hasOwnProperty;var z=(c,r)=>{for(var e in r)k(c,e,{get:r[e],enumerable:!0})},F=(c,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of K(r))!W.call(c,s)&&s!==e&&k(c,s,{get:()=>r[s],enumerable:!(t=M(r,s))||t.enumerable});return c};var _=c=>F(k({},"__esModule",{value:!0}),c);var O={};z(O,{BaseWalletLocked:()=>g,BaseWalletUnlocked:()=>y,Wallet:()=>h,WalletLocked:()=>P,WalletUnlocked:()=>a});module.exports=_(O);var f=require("@ethersproject/bytes"),L=require("@fuel-ts/address"),l=require("@fuel-ts/constants"),A=require("@fuel-ts/interfaces"),q=require("@fuel-ts/math"),u=require("@fuel-ts/providers"),w=require("@fuel-ts/transactions");var m="http://127.0.0.1:4000/graphql";var g=class extends A.AbstractWallet{constructor(e,t=m){super();this.provider=this.connect(t),typeof e=="string"?this._address=L.Address.fromString(e):this._address=(0,L.addressify)(e)}get address(){return this._address}connect(e){if(e)typeof e=="string"?this.provider?this.provider.connect(e):this.provider=new u.Provider(e):this.provider=e;else throw new Error("Provider is required");return this.provider}async getResourcesToSpend(e,t){return this.provider.getResourcesToSpend(this.address,e,t)}async getCoins(e){let t=[],i;for(;;){let n=await this.provider.getCoins(this.address,e,{first:9999,after:i});if(t.push(...n),!(n.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return t}async getMessages(){let e=[],s;for(;;){let i=await this.provider.getMessages(this.address,{first:9999,after:s});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} messages are not yet supported`)}return e}async getBalance(e=l.NativeAssetId){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],s;for(;;){let i=await this.provider.getBalances(this.address,{first:9999,after:s});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),s=await this.getResourcesToSpend([t]);e.addResources(s)}async transfer(e,t,s=l.NativeAssetId,i={}){let n={gasLimit:w.MAX_GAS_PER_TX,...i},o=new u.ScriptTransactionRequest(n);o.addCoinOutput(e,t,s);let d=o.calculateFee(),p=[];d.assetId===(0,f.hexlify)(s)?(d.amount=d.amount.add(t),p=[d]):p=[[t,s],d];let R=await this.getResourcesToSpend(p);return o.addResources(R),this.sendTransaction(o)}async withdrawToBaseLayer(e,t,s={}){let i=(0,f.arrayify)("0x".concat(e.toHexString().substring(2).padStart(64,"0"))),n=(0,f.arrayify)("0x".concat((0,q.bn)(t).toHex().substring(2).padStart(16,"0"))),d={script:new Uint8Array([...(0,f.arrayify)(u.withdrawScript.bytes),...i,...n]),gasLimit:w.MAX_GAS_PER_TX,...s},p=new u.ScriptTransactionRequest(d);p.addMessageOutputs();let R=p.calculateFee(),B=[];R.amount=R.amount.add(t),B=[R];let N=await this.getResourcesToSpend(B);return p.addResources(N),this.sendTransaction(p)}async sendTransaction(e){let t=(0,u.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(t)}async simulateTransaction(e){let t=(0,u.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.simulate(t)}async buildPredicateTransaction(e,t,s=l.NativeAssetId,i){let n={fundTransaction:!0,...i},o=new u.ScriptTransactionRequest({gasLimit:w.MAX_GAS_PER_TX,...n});o.addCoinOutput(e,t,s);let d=[];if(n.fundTransaction&&d.push(o.calculateFee()),d.length){let p=await this.getResourcesToSpend(d);o.addResources(p)}return o}async submitPredicate(e,t,s=l.NativeAssetId,i){let n=await this.buildPredicateTransaction(e,t,s,i);return(await this.sendTransaction(n)).waitForResult()}async submitSpendPredicate(e,t,s,i=l.NativeAssetId,n){return this.provider.submitSpendPredicate(e,t,this.address,s,i,n)}};var b=require("@fuel-ts/hasher"),v=require("@fuel-ts/providers"),C=require("@fuel-ts/signer");var y=class extends g{constructor(e,t=m){let s=new C.Signer(e);super(s.address,t);this.signer=()=>s,this.provider=this.connect(t)}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}async signMessage(e){return this.signer().sign((0,b.hashMessage)(e))}async signTransaction(e){let t=(0,v.transactionRequestify)(e),s=(0,b.hashTransaction)(t);return this.signer().sign(s)}async populateTransactionWitnessesSignature(e){let t=(0,v.transactionRequestify)(e),s=await this.signTransaction(t);return t.updateWitnessByOwner(this.address,s),t}async sendTransaction(e){let t=(0,v.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(await this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=(0,v.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.call(await this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}};y.defaultPath="m/44'/1179993420'/0'/0/0";var S=require("@fuel-ts/hdwallet"),E=require("@fuel-ts/mnemonic"),x=require("@fuel-ts/signer");var P=class extends g{unlock(r){return new a(r,this.provider)}},a=class extends y{lock(){return this.signer=()=>new x.Signer("0x00"),new P(this.address,this.provider)}static generate(r){let e=x.Signer.generatePrivateKey(r==null?void 0:r.entropy);return new a(e,r==null?void 0:r.provider)}static fromSeed(r,e,t){let i=S.HDWallet.fromSeed(r).derivePath(e||a.defaultPath);return new a(i.privateKey,t)}static fromMnemonic(r,e,t,s){let i=E.Mnemonic.mnemonicToSeed(r,t),o=S.HDWallet.fromSeed(i).derivePath(e||a.defaultPath);return new a(o.privateKey,s)}static fromExtendedKey(r,e){let t=S.HDWallet.fromExtendedKey(r);return new a(t.privateKey,e)}};var h=class{static fromAddress(r,e=m){return new P(r,e)}static fromPrivateKey(r,e=m){return new a(r,e)}};h.generate=a.generate,h.fromSeed=a.fromSeed,h.fromMnemonic=a.fromMnemonic,h.fromExtendedKey=a.fromExtendedKey;0&&(module.exports={BaseWalletLocked,BaseWalletUnlocked,Wallet,WalletLocked,WalletUnlocked});
//# sourceMappingURL=index.js.map