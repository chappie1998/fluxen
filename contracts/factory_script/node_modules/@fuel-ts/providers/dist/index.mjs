import{hexlify as Qt}from"@ethersproject/bytes";import{NativeAssetId as ut}from"@fuel-ts/constants";import{bn as pt}from"@fuel-ts/math";var F=r=>{var s,n,o,p;let t,e,a;return Array.isArray(r)?(e=r[0],t=(s=r[1])!=null?s:ut,a=(n=r[2])!=null?n:void 0):(e=r.amount,t=(o=r.assetId)!=null?o:ut,a=(p=r.max)!=null?p:void 0),{assetId:Qt(t),amount:pt(e),max:a?pt(a):void 0}};import u from"graphql-tag";var lt=(e=>(e.Spent="SPENT",e.Unspent="UNSPENT",e))(lt||{});var w=u`
  fragment transactionFragment on Transaction {
    id
    rawPayload
    gasPrice
    status {
      type: __typename
      ... on SubmittedStatus {
        time
      }
      ... on SuccessStatus {
        block {
          id
        }
        time
        programState {
          returnType
          data
        }
      }
      ... on FailureStatus {
        block {
          id
        }
        time
        reason
      }
    }
  }
`,yt=u`
  fragment receiptFragment on Receipt {
    data
    rawPayload
  }
`,Z=u`
  fragment coinFragment on Coin {
    utxoId
    owner
    amount
    assetId
    maturity
    status
    blockCreated
  }
`,dt=u`
  fragment messageFragment on Message {
    amount
    sender
    recipient
    data
    nonce
    daHeight
  }
`,$t=u`
  fragment messageProofFragment on MessageProof {
    proofSet
    proofIndex
    sender
    recipient
    nonce
    amount
    data
    signature
    header {
      id
      daHeight
      transactionsCount
      outputMessagesCount
      transactionsRoot
      outputMessagesRoot
      height
      prevRoot
      time
      applicationHash
    }
  }
`,gt=u`
  fragment balanceFragment on Balance {
    owner
    amount
    assetId
  }
`,Ft=u`
  fragment consensusParametersFragment on ConsensusParameters {
    contractMaxSize
    maxInputs
    maxOutputs
    maxWitnesses
    maxGasPerTx
    maxScriptLength
    maxScriptDataLength
    maxStorageSlots
    maxPredicateLength
    maxPredicateDataLength
    gasPriceFactor
    gasPerByte
    maxMessageDataLength
  }
`,E=u`
  fragment blockFragment on Block {
    id
    header {
      height
      time
    }
    transactions {
      id
    }
  }
`,Et=u`
  fragment chainInfoFragment on ChainInfo {
    name
    baseChainHeight
    peerCount
    consensusParameters {
      ...consensusParametersFragment
    }
    latestBlock {
      ...blockFragment
    }
  }
  ${Ft}
  ${E}
`,Nt=u`
  fragment contractBalanceFragment on ContractBalance {
    contract
    amount
    assetId
  }
`,Ut=u`
  query getVersion {
    nodeInfo {
      nodeVersion
    }
  }
`,Vt=u`
  query getInfo {
    nodeInfo {
      nodeVersion
      minGasPrice
    }
  }
`,Ht=u`
  query getChain {
    chain {
      ...chainInfoFragment
    }
  }
  ${Et}
`,vt=u`
  query getTransaction($transactionId: TransactionId!) {
    transaction(id: $transactionId) {
      ...transactionFragment
    }
  }
  ${w}
`,Wt=u`
  query getTransactionWithReceipts($transactionId: TransactionId!) {
    transaction(id: $transactionId) {
      ...transactionFragment
      receipts {
        ...receiptFragment
      }
    }
  }
  ${w}
  ${yt}
`,zt=u`
  query getTransactions($after: String, $before: String, $first: Int, $last: Int) {
    transactions(after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...transactionFragment
        }
      }
    }
  }
  ${w}
`,Kt=u`
  query getTransactionsByOwner(
    $owner: Address!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    transactionsByOwner(owner: $owner, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...transactionFragment
        }
      }
    }
  }
  ${w}
`,Xt=u`
  query getBlock($blockId: BlockId, $blockHeight: U64) {
    block(id: $blockId, height: $blockHeight) {
      ...blockFragment
    }
  }
  ${E}
`,Zt=u`
  query getBlockWithTransactions($blockId: BlockId, $blockHeight: U64) {
    block(id: $blockId, height: $blockHeight) {
      ...blockFragment
      transactions {
        ...transactionFragment
      }
    }
  }
  ${E}
  ${w}
`,Jt=u`
  query getBlocks($after: String, $before: String, $first: Int, $last: Int) {
    blocks(after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...blockFragment
        }
      }
    }
  }
  ${E}
`,Yt=u`
  query getCoin($coinId: UtxoId!) {
    coin(utxoId: $coinId) {
      ...coinFragment
    }
  }
  ${Z}
`,jt=u`
  query getCoins(
    $filter: CoinFilterInput!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    coins(filter: $filter, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...coinFragment
        }
      }
    }
  }
  ${Z}
`,te=u`
  query getResourcesToSpend(
    $owner: Address!
    $queryPerAsset: [SpendQueryElementInput!]!
    $excludedIds: ExcludeInput
  ) {
    resourcesToSpend(owner: $owner, queryPerAsset: $queryPerAsset, excludedIds: $excludedIds) {
      ...coinFragment
      ...messageFragment
    }
  }
  ${Z}
  ${dt}
`,ee=u`
  query getContract($contractId: ContractId!) {
    contract(id: $contractId) {
      bytecode
      id
    }
  }
`,ae=u`
  query getContractBalance($contract: ContractId!, $asset: AssetId!) {
    contractBalance(contract: $contract, asset: $asset) {
      ...contractBalanceFragment
    }
  }
  ${Nt}
`,re=u`
  query getBalance($owner: Address!, $assetId: AssetId!) {
    balance(owner: $owner, assetId: $assetId) {
      ...balanceFragment
    }
  }
  ${gt}
`,se=u`
  query getBalances(
    $filter: BalanceFilterInput!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    balances(filter: $filter, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...balanceFragment
        }
      }
    }
  }
  ${gt}
`,ne=u`
  query getMessages($owner: Address!, $after: String, $before: String, $first: Int, $last: Int) {
    messages(owner: $owner, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...messageFragment
        }
      }
    }
  }
  ${dt}
`,oe=u`
  query getMessageProof($transactionId: TransactionId!, $messageId: MessageId!) {
    messageProof(transactionId: $transactionId, messageId: $messageId) {
      ...messageProofFragment
    }
  }
  ${$t}
`,ie=u`
  mutation dryRun($encodedTransaction: HexString!, $utxoValidation: Boolean) {
    dryRun(tx: $encodedTransaction, utxoValidation: $utxoValidation) {
      ...receiptFragment
    }
  }
  ${yt}
`,ce=u`
  mutation submit($encodedTransaction: HexString!) {
    submit(tx: $encodedTransaction) {
      id
    }
  }
`,ue=u`
  mutation startSession {
    startSession
  }
`,pe=u`
  mutation endSession($sessionId: ID!) {
    endSession(id: $sessionId)
  }
`,le=u`
  mutation execute($sessionId: ID!, $op: String!) {
    execute(id: $sessionId, op: $op)
  }
`,ye=u`
  mutation reset($sessionId: ID!) {
    reset(id: $sessionId)
  }
`,de=(r,t,e)=>r();function mt(r,t=de){return{getVersion(e,a){return t(s=>r.request(Ut,e,{...a,...s}),"getVersion","query")},getInfo(e,a){return t(s=>r.request(Vt,e,{...a,...s}),"getInfo","query")},getChain(e,a){return t(s=>r.request(Ht,e,{...a,...s}),"getChain","query")},getTransaction(e,a){return t(s=>r.request(vt,e,{...a,...s}),"getTransaction","query")},getTransactionWithReceipts(e,a){return t(s=>r.request(Wt,e,{...a,...s}),"getTransactionWithReceipts","query")},getTransactions(e,a){return t(s=>r.request(zt,e,{...a,...s}),"getTransactions","query")},getTransactionsByOwner(e,a){return t(s=>r.request(Kt,e,{...a,...s}),"getTransactionsByOwner","query")},getBlock(e,a){return t(s=>r.request(Xt,e,{...a,...s}),"getBlock","query")},getBlockWithTransactions(e,a){return t(s=>r.request(Zt,e,{...a,...s}),"getBlockWithTransactions","query")},getBlocks(e,a){return t(s=>r.request(Jt,e,{...a,...s}),"getBlocks","query")},getCoin(e,a){return t(s=>r.request(Yt,e,{...a,...s}),"getCoin","query")},getCoins(e,a){return t(s=>r.request(jt,e,{...a,...s}),"getCoins","query")},getResourcesToSpend(e,a){return t(s=>r.request(te,e,{...a,...s}),"getResourcesToSpend","query")},getContract(e,a){return t(s=>r.request(ee,e,{...a,...s}),"getContract","query")},getContractBalance(e,a){return t(s=>r.request(ae,e,{...a,...s}),"getContractBalance","query")},getBalance(e,a){return t(s=>r.request(re,e,{...a,...s}),"getBalance","query")},getBalances(e,a){return t(s=>r.request(se,e,{...a,...s}),"getBalances","query")},getMessages(e,a){return t(s=>r.request(ne,e,{...a,...s}),"getMessages","query")},getMessageProof(e,a){return t(s=>r.request(oe,e,{...a,...s}),"getMessageProof","query")},dryRun(e,a){return t(s=>r.request(ie,e,{...a,...s}),"dryRun","mutation")},submit(e,a){return t(s=>r.request(ce,e,{...a,...s}),"submit","mutation")},startSession(e,a){return t(s=>r.request(ue,e,{...a,...s}),"startSession","mutation")},endSession(e,a){return t(s=>r.request(pe,e,{...a,...s}),"endSession","mutation")},execute(e,a){return t(s=>r.request(le,e,{...a,...s}),"execute","mutation")},reset(e,a){return t(s=>r.request(ye,e,{...a,...s}),"reset","mutation")}}}import{arrayify as ct,hexlify as I}from"@ethersproject/bytes";import{AbiCoder as Oe}from"@fuel-ts/abi-coder";import{Address as b}from"@fuel-ts/address";import{NativeAssetId as At}from"@fuel-ts/constants";import{max as Le,bn as i}from"@fuel-ts/math";import{TransactionType as De,InputMessageCoder as wt,MAX_GAS_PER_TX as Ot,ReceiptType as Lt,ReceiptCoder as Qe,TransactionCoder as Dt}from"@fuel-ts/transactions";import{GraphQLClient as $e}from"graphql-request";import Fe from"lodash.clonedeep";var St=r=>"utxoId"in r,Ye=r=>"recipient"in r,O=r=>"id"in r,je=r=>"recipient"in r;import{arrayify as f,hexlify as x}from"@ethersproject/bytes";import{ZeroBytes32 as J}from"@fuel-ts/constants";import{bn as Y,toNumber as N}from"@fuel-ts/math";import{InputType as P}from"@fuel-ts/transactions";var xt=r=>{var t,e,a,s,n;switch(r.type){case P.Coin:{let o=f((t=r.predicate)!=null?t:"0x"),p=f((e=r.predicateData)!=null?e:"0x");return{type:P.Coin,utxoID:{transactionId:x(f(r.id).slice(0,32)),outputIndex:f(r.id)[32]},owner:x(r.owner),amount:Y(r.amount),assetId:x(r.assetId),txPointer:{blockHeight:N(f(r.txPointer).slice(0,8)),txIndex:N(f(r.txPointer).slice(8,16))},witnessIndex:r.witnessIndex,maturity:(a=r.maturity)!=null?a:0,predicateLength:o.length,predicateDataLength:p.length,predicate:x(o),predicateData:x(p)}}case P.Contract:return{type:P.Contract,utxoID:{transactionId:J,outputIndex:0},balanceRoot:J,stateRoot:J,txPointer:{blockHeight:N(f(r.txPointer).slice(0,8)),txIndex:N(f(r.txPointer).slice(8,16))},contractID:x(r.contractId)};case P.Message:{let o=f((s=r.predicate)!=null?s:"0x"),p=f((n=r.predicateData)!=null?n:"0x");return{type:P.Message,sender:x(r.sender),recipient:x(r.recipient),amount:Y(r.amount),nonce:Y(r.nonce),witnessIndex:r.witnessIndex,dataLength:r.data.length,predicateLength:o.length,predicateDataLength:p.length,data:x(r.data),predicate:x(o),predicateData:x(p)}}default:throw new Error("Invalid Input type")}};import{hexlify as T}from"@ethersproject/bytes";import{ZeroBytes32 as U}from"@fuel-ts/constants";import{bn as V}from"@fuel-ts/math";import{OutputType as m}from"@fuel-ts/transactions";var ft=r=>{switch(r.type){case m.Coin:return{type:m.Coin,to:T(r.to),amount:V(r.amount),assetId:T(r.assetId)};case m.Contract:return{type:m.Contract,inputIndex:r.inputIndex,balanceRoot:U,stateRoot:U};case m.Message:return{type:m.Message,recipient:T(r.recipient),amount:V(r.amount)};case m.Change:return{type:m.Change,to:T(r.to),amount:V(0),assetId:T(r.assetId)};case m.Variable:return{type:m.Variable,to:U,amount:V(0),assetId:U};case m.ContractCreated:return{type:m.ContractCreated,contractId:T(r.contractId),stateRoot:T(r.stateRoot)};default:throw new Error("Invalid Output type")}};import{arrayify as R,hexlify as C}from"@ethersproject/bytes";import{addressify as D}from"@fuel-ts/address";import{NativeAssetId as et,ZeroBytes32 as at}from"@fuel-ts/constants";import{bn as H}from"@fuel-ts/math";import{TransactionType as k,TransactionCoder as _e,InputType as G,OutputType as S,GAS_PRICE_FACTOR as Me}from"@fuel-ts/transactions";import{FAILED_TRANSFER_TO_ADDRESS_SIGNAL as ge,ReceiptType as It}from"@fuel-ts/transactions";var me=r=>r.type===It.Revert&&r.val.toString("hex")===ge,Se=r=>r.type===It.Panic&&r.contractId!=="0x0000000000000000000000000000000000000000000000000000000000000000",ht=r=>r.reduce((t,e)=>(me(e)&&t.missingOutputVariables.push(e),Se(e)&&t.missingOutputContractIds.push(e),t),{missingOutputVariables:[],missingOutputContractIds:[]});import{bn as bt,multiply as xe}from"@fuel-ts/math";import{GAS_PRICE_FACTOR as fe,ReceiptType as qt}from"@fuel-ts/transactions";var j=(r,t,e)=>bt(Math.ceil(r.toNumber()/e.toNumber())*t.toNumber()),Ie=r=>{let t=r.find(e=>e.type===qt.ScriptResult);return t&&t.type===qt.ScriptResult?t.gasUsed:bt(0)},L=({receipts:r,gasPrice:t,margin:e})=>{let a=xe(Ie(r),e||1),s=j(a,t,fe);return{gasUsed:a,fee:s}};var he="https://fuellabs.github.io/block-explorer-v2",qe=(r,t)=>`${{address:"address",txId:"transaction",blockNumber:"block"}[r]||r}/${t}`,Sa=({blockExplorerUrl:r,path:t,providerUrl:e,address:a,txId:s,blockNumber:n})=>{let o=r||he,p=[{key:"address",value:a},{key:"txId",value:s},{key:"blockNumber",value:n}],c=p.filter(q=>!!q.value).map(({key:q,value:X})=>({key:q,value:X}));if(c.length>1)throw new Error(`Only one of the following can be passed in to buildBlockExplorerUrl: ${p.map(q=>q.key).join(", ")}`);if(c.length===0&&!t)throw new Error(`One of the following must be passed in to buildBlockExplorerUrl: ${p.map(q=>q.key).join(", ")}, path`);if(t&&c.length>0){let q=p.map(({key:X})=>X).join(", ");throw new Error(`You cannot pass in a path to buildBlockExplorerUrl along with any of the following: ${q}`)}let d=/^\/|\/$/gm,g=t?t.replace(d,""):qe(c[0].key,c[0].value),B=o.replace(d,""),h=e==null?void 0:e.replace(d,""),_=h?encodeURIComponent(h):void 0,M=B.match(/^https?:\/\//)?"":"https://",$=h!=null&&h.match(/^https?:\/\//)?"":"https://";return`${M}${B}/${g}${_?`?providerUrl=${$}${_}`:""}`};import{hexlify as be}from"@ethersproject/bytes";import Te from"lodash.clonedeep";function tt(r){return Object.keys(r).forEach(t=>{switch(r[t].constructor.name){case"Uint8Array":r[t]=be(r[t]);break;case"Array":r[t]=tt(r[t]);break;case"BN":r[t]=r[t].toHex();break;case"Address":r[t]=r[t].toB256();break;case"Object":r[t]=tt(r[t]);break;default:break}}),r}function Tt(r){return tt(Te(r))}function Gt(r){return new Promise(t=>{setTimeout(()=>{t(!0)},r)})}import{hexlify as Rt,arrayify as Ge}from"@ethersproject/bytes";var Re=r=>{let t=new Uint8Array(32);return t.set(Ge(r)),t},Ct=r=>{let t,e;return Array.isArray(r)?(t=r[0],e=r[1]):(t=r.key,e=r.value),{key:Rt(t),value:Rt(Re(e))}};import{arrayify as Ce,hexlify as Be}from"@ethersproject/bytes";var Bt=r=>{let t=Ce(r);return{data:Be(t),dataLength:t.length}};var _t={bytes:R("0x24000000"),encodeScriptData:()=>new Uint8Array(0)},Ha={bytes:R("0x5040C0105D44C0064C40001124000000"),encodeScriptData:()=>new Uint8Array(0)},rt=class extends Error{constructor(){super(...arguments);this.name="ChangeOutputCollisionError";this.message='A ChangeOutput with the same "assetId" already exists for a different "to" address'}},st=class extends Error{constructor(e){super();this.index=e;this.name="NoWitnessAtIndexError";this.message=`Witness at index "${e}" was not found`}},nt=class extends Error{constructor(e){super();this.owner=e;this.name="NoWitnessByOwnerError";this.message=`A witness for the given owner "${e}" was not found`}},v=class{constructor({gasPrice:t,gasLimit:e,maturity:a,inputs:s,outputs:n,witnesses:o}={}){this.inputs=[];this.outputs=[];this.witnesses=[];this.gasPrice=H(t!=null?t:0),this.gasLimit=H(e!=null?e:0),this.maturity=a!=null?a:0,this.inputs=[...s!=null?s:[]],this.outputs=[...n!=null?n:[]],this.witnesses=[...o!=null?o:[]]}getBaseTransaction(){var s,n,o,p,c,d;let t=(n=(s=this.inputs)==null?void 0:s.map(xt))!=null?n:[],e=(p=(o=this.outputs)==null?void 0:o.map(ft))!=null?p:[],a=(d=(c=this.witnesses)==null?void 0:c.map(Bt))!=null?d:[];return{gasPrice:this.gasPrice,gasLimit:this.gasLimit,maturity:this.maturity,inputs:t,outputs:e,witnesses:a,inputsCount:t.length,outputsCount:e.length,witnessesCount:a.length}}toTransactionBytes(){return new _e().encode(this.toTransaction())}pushInput(t){return this.inputs.push(t),this.inputs.length-1}pushOutput(t){return this.outputs.push(t),this.outputs.length-1}createWitness(){return this.witnesses.push("0x"),this.witnesses.length-1}updateWitnessByOwner(t,e){let a=this.getCoinInputWitnessIndexByOwner(t);typeof a=="number"&&this.updateWitness(a,e)}updateWitness(t,e){if(!this.witnesses[t])throw new st(t);this.witnesses[t]=e}getCoinInputs(){return this.inputs.filter(t=>t.type===G.Coin)}getCoinOutputs(){return this.outputs.filter(t=>t.type===S.Coin)}getChangeOutputs(){return this.outputs.filter(t=>t.type===S.Change)}getCoinInputWitnessIndexByOwner(t){var a,s;let e=D(t);return(s=(a=this.inputs.find(n=>n.type===G.Coin&&C(n.owner)===e.toB256()))==null?void 0:a.witnessIndex)!=null?s:null}updateWitnessByCoinInputOwner(t,e){let a=this.getCoinInputWitnessIndexByOwner(t);if(!a)throw new nt(D(t));this.updateWitness(a,e)}addResource(t){let e=O(t)?t.owner:t.recipient,a=O(t)?t.assetId:et,s=O(t)?G.Coin:G.Message,n=this.getCoinInputWitnessIndexByOwner(e);typeof n!="number"&&(n=this.createWitness()),this.pushInput(O(t)?{type:s,...t,owner:t.owner.toB256(),witnessIndex:n,txPointer:"0x00000000000000000000000000000000"}:{type:s,...t,sender:t.sender.toB256(),recipient:t.recipient.toB256(),witnessIndex:n,txPointer:"0x00000000000000000000000000000000"});let o=this.getChangeOutputs().find(p=>C(p.assetId)===a);if(o&&C(o.to)!==e.toB256())throw new rt;o||this.pushOutput({type:S.Change,to:e.toB256(),assetId:a})}addResources(t){t.forEach(e=>this.addResource(e))}addCoinOutput(t,e,a=et){this.pushOutput({type:S.Coin,to:D(t).toB256(),amount:e,assetId:a})}addCoinOutputs(t,e){e.map(F).forEach(a=>{this.pushOutput({type:S.Coin,to:D(t).toB256(),amount:a.amount,assetId:a.assetId})})}byteSize(){return this.toTransactionBytes().length}chargeableByteSize(){let t=this.witnesses.reduce((e,a)=>e+R(a).length,0);return H(this.toTransactionBytes().length-t)}calculateFee(){let t=j(this.gasLimit,this.gasPrice,Me);return{assetId:et,amount:t.isZero()?H(1):t}}addMessage(t){let e=this.getCoinInputWitnessIndexByOwner(t.recipient);typeof e!="number"&&(e=this.createWitness()),this.pushInput({type:G.Message,...t,sender:t.sender.toBytes(),recipient:t.recipient.toBytes(),witnessIndex:e})}addMessages(t){t.forEach(e=>this.addMessage(e))}toJSON(){return Tt(this)}},A=class extends v{constructor({script:e,scriptData:a,...s}={}){super(s);this.type=k.Script;this.script=R(e!=null?e:_t.bytes),this.scriptData=R(a!=null?a:_t.encodeScriptData())}static from(e){return e instanceof this?e:new this(e)}toTransaction(){var s,n;let e=R((s=this.script)!=null?s:"0x"),a=R((n=this.scriptData)!=null?n:"0x");return{type:k.Script,...super.getBaseTransaction(),scriptLength:e.length,scriptDataLength:a.length,receiptsRoot:at,script:C(e),scriptData:C(a)}}getContractInputs(){return this.inputs.filter(e=>e.type===G.Contract)}getContractOutputs(){return this.outputs.filter(e=>e.type===S.Contract)}getVariableOutputs(){return this.outputs.filter(e=>e.type===S.Variable)}setScript(e,a){this.script=e.bytes,this.scriptData=e.encodeScriptData(a),this.bytesOffset===void 0&&(this.bytesOffset=this.scriptData.byteLength)}addVariableOutputs(e=1){let a=e;for(;a;)this.pushOutput({type:S.Variable}),a-=1;return this.outputs.length-1}addMessageOutputs(e=1){let a=e;for(;a;)this.pushOutput({type:S.Message,recipient:"0x0000000000000000000000000000000000000000000000000000000000000000",amount:0}),a-=1;return this.outputs.length-1}addContract(e){let a=D(e);if(this.getContractInputs().find(n=>n.contractId===a.toB256()))return;let s=super.pushInput({type:G.Contract,contractId:a.toB256(),txPointer:"0x00000000000000000000000000000000"});this.pushOutput({type:S.Contract,inputIndex:s})}},W=class extends v{constructor({bytecodeWitnessIndex:e,salt:a,storageSlots:s,...n}={}){super(n);this.type=k.Create;this.bytecodeWitnessIndex=e!=null?e:0,this.salt=C(a!=null?a:at),this.storageSlots=[...s!=null?s:[]]}static from(e){return e instanceof this?e:new this(e)}toTransaction(){var n,o;let e=this.getBaseTransaction(),a=this.bytecodeWitnessIndex,s=(o=(n=this.storageSlots)==null?void 0:n.map(Ct))!=null?o:[];return{type:k.Create,...e,bytecodeLength:e.witnesses[a].dataLength/4,bytecodeWitnessIndex:a,storageSlotsCount:s.length,salt:this.salt?C(this.salt):at,storageSlots:s}}getContractCreatedOutputs(){return this.outputs.filter(e=>e.type===S.ContractCreated)}addContractCreatedOutput(e,a){this.pushOutput({type:S.ContractCreated,contractId:e,stateRoot:a})}},Q=r=>{if(r instanceof A||r instanceof W)return r;switch(r.type){case k.Script:return A.from(r);case k.Create:return W.from(r);default:throw new Error(`Unknown transaction type: ${r.type}`)}};import{arrayify as kt}from"@ethersproject/bytes";import{bn as ot}from"@fuel-ts/math";import{TransactionCoder as Pe,ReceiptType as Mt,ReceiptCoder as ke}from"@fuel-ts/transactions";var Ae=5e3,we=1e3,Pt=r=>{let t=new ke().decode(kt(r.rawPayload),0)[0];switch(t.type){case Mt.ReturnData:return{...t,data:r.data};case Mt.LogData:return{...t,data:r.data};default:return t}},z=class{constructor(t,e){this.gasUsed=ot(0);this.attempts=0;this.id=t,this.provider=e}async fetch(){let{transaction:t}=await this.provider.operations.getTransactionWithReceipts({transactionId:this.id});return t}decodeTransaction(t){var e;return(e=new Pe().decode(kt(t.rawPayload),0))==null?void 0:e[0]}async waitForResult(){var e,a;let t=await this.fetch();switch((e=t==null?void 0:t.status)==null?void 0:e.type){case void 0:case"SubmittedStatus":return this.attempts+=1,await Gt(Math.min(we*this.attempts,Ae)),this.waitForResult();case"FailureStatus":{let s=t.receipts.map(Pt),{gasUsed:n,fee:o}=L({receipts:s,gasPrice:ot(t==null?void 0:t.gasPrice)});return this.gasUsed=n,{status:{type:"failure",reason:t.status.reason},receipts:s,transactionId:this.id,blockId:t.status.block.id,time:t.status.time,gasUsed:n,fee:o,transaction:this.decodeTransaction(t)}}case"SuccessStatus":{let s=((a=t.receipts)==null?void 0:a.map(Pt))||[],{gasUsed:n,fee:o}=L({receipts:s,gasPrice:ot(t==null?void 0:t.gasPrice)});return{status:{type:"success",programState:t.status.programState},receipts:s,transactionId:this.id,blockId:t.status.block.id,time:t.status.time,gasUsed:n,fee:o,transaction:this.decodeTransaction(t)}}default:throw new Error("Invalid Transaction status")}}async wait(){let t=await this.waitForResult();if(t.status.type==="failure")throw new Error(`Transaction failed: ${t.status.reason}`);return t}};var Ee=10,it=r=>{let t=new Qe().decode(ct(r.rawPayload),0)[0];switch(t.type){case Lt.ReturnData:return{...t,data:r.data};case Lt.LogData:return{...t,data:r.data};default:return t}},Ne=r=>{let{name:t,baseChainHeight:e,peerCount:a,consensusParameters:s,latestBlock:n}=r;return{name:t,baseChainHeight:i(e),peerCount:a,consensusParameters:{contractMaxSize:i(s.contractMaxSize),maxInputs:i(s.maxInputs),maxOutputs:i(s.maxOutputs),maxWitnesses:i(s.maxWitnesses),maxGasPerTx:i(s.maxGasPerTx),maxScriptLength:i(s.maxScriptLength),maxScriptDataLength:i(s.maxScriptDataLength),maxStorageSlots:i(s.maxStorageSlots),maxPredicateLength:i(s.maxPredicateLength),maxPredicateDataLength:i(s.maxPredicateDataLength),gasPriceFactor:i(s.gasPriceFactor),gasPerByte:i(s.gasPerByte),maxMessageDataLength:i(s.maxMessageDataLength)},latestBlock:{id:n.id,height:i(n.header.height),time:n.header.time,transactions:n.transactions.map(o=>({id:o.id}))}}},Ue=r=>({minGasPrice:i(r.minGasPrice),nodeVersion:r.nodeVersion}),K=class{constructor(t){this.url=t;this.addMissingVariables=async t=>{let e=0,a=0,s=0;if(t.type!==De.Create)do{let n=I(t.toTransactionBytes()),{dryRun:o}=await this.operations.dryRun({encodedTransaction:n,utxoValidation:!1}),p=o.map(it),{missingOutputVariables:c,missingOutputContractIds:d}=ht(p);if(e=c.length,a=d.length,e===0&&a===0)return;t.addVariableOutputs(e),d.forEach(({contractId:g})=>t.addContract(b.fromString(g))),s+=1}while(s<Ee)};this.operations=this.createOperations(t)}createOperations(t){this.url=t;let e=new $e(t);return mt(e)}connect(t){this.operations=this.createOperations(t)}async getVersion(){let{nodeInfo:{nodeVersion:t}}=await this.operations.getVersion();return t}async getNetwork(){return{name:"fuelv2",chainId:3735928559}}async getBlockNumber(){let{chain:t}=await this.operations.getChain();return i(t.latestBlock.header.height,10)}async getNodeInfo(){let{nodeInfo:t}=await this.operations.getInfo();return Ue(t)}async getChain(){let{chain:t}=await this.operations.getChain();return Ne(t)}async sendTransaction(t){let e=Q(t);await this.addMissingVariables(e);let a=I(e.toTransactionBytes()),{gasUsed:s,minGasPrice:n}=await this.getTransactionCost(e,0);if(i(s).gt(i(e.gasLimit)))throw new Error(`gasLimit(${e.gasLimit}) is lower than the required (${s})`);if(i(n).gt(i(e.gasPrice)))throw new Error(`gasPrice(${e.gasPrice}) is lower than the required ${n}`);let{submit:{id:o}}=await this.operations.submit({encodedTransaction:a});return new z(o,this)}async call(t,{utxoValidation:e}={}){let a=Q(t);await this.addMissingVariables(a);let s=I(a.toTransactionBytes()),{dryRun:n}=await this.operations.dryRun({encodedTransaction:s,utxoValidation:e||!1});return{receipts:n.map(it)}}async simulate(t){let e=Q(t);await this.addMissingVariables(e);let a=I(e.toTransactionBytes()),{dryRun:s}=await this.operations.dryRun({encodedTransaction:a,utxoValidation:!0});return{receipts:s.map(it)}}async getTransactionCost(t,e=.2){let a=Q(Fe(t)),{minGasPrice:s}=await this.getNodeInfo(),n=Le(a.gasPrice,s),o=1+e;a.gasLimit=Ot,a.gasPrice=i(0);let{receipts:p}=await this.call(a),{gasUsed:c,fee:d}=L({gasPrice:n,receipts:p,margin:o});return{minGasPrice:s,gasPrice:n,gasUsed:c,fee:d}}async getCoins(t,e,a){return(await this.operations.getCoins({first:10,...a,filter:{owner:t.toB256(),assetId:e&&I(e)}})).coins.edges.map(o=>o.node).map(o=>({id:o.utxoId,assetId:o.assetId,amount:i(o.amount),owner:b.fromAddressOrString(o.owner),status:o.status,maturity:i(o.maturity).toNumber(),blockCreated:i(o.blockCreated)}))}async getResourcesToSpend(t,e,a){var o,p;let s={messages:((o=a==null?void 0:a.messages)==null?void 0:o.map(c=>I(c)))||[],utxos:((p=a==null?void 0:a.utxos)==null?void 0:p.map(c=>I(c)))||[]};return(await this.operations.getResourcesToSpend({owner:t.toB256(),queryPerAsset:e.map(F).map(({assetId:c,amount:d,max:g})=>({assetId:I(c),amount:d.toString(10),max:g?g.toString(10):void 0})),excludedIds:s})).resourcesToSpend.flat().map(c=>St(c)?{id:c.utxoId,amount:i(c.amount),status:c.status,assetId:c.assetId,owner:b.fromAddressOrString(c.owner),maturity:i(c.maturity).toNumber(),blockCreated:i(c.blockCreated)}:{sender:b.fromAddressOrString(c.sender),recipient:b.fromAddressOrString(c.recipient),nonce:i(c.nonce),amount:i(c.amount),data:wt.decodeData(c.data),daHeight:i(c.daHeight)})}async getBlock(t){let e;typeof t=="number"?e={blockHeight:i(t).toString(10)}:t==="latest"?e={blockHeight:(await this.getBlockNumber()).toString(10)}:e={blockId:i(t).toString(10)};let{block:a}=await this.operations.getBlock(e);return a?{id:a.id,height:i(a.header.height),time:a.header.time,transactionIds:a.transactions.map(s=>s.id)}:null}async getBlockWithTransactions(t){let e;typeof t=="number"?e={blockHeight:i(t).toString(10)}:t==="latest"?e={blockHeight:(await this.getBlockNumber()).toString()}:e={blockId:t};let{block:a}=await this.operations.getBlockWithTransactions(e);return a?{id:a.id,height:i(a.header.height,10),time:a.header.time,transactionIds:a.transactions.map(s=>s.id),transactions:a.transactions.map(s=>{var n;return(n=new Dt().decode(ct(s.rawPayload),0))==null?void 0:n[0]})}:null}async getTransaction(t){var a;let{transaction:e}=await this.operations.getTransaction({transactionId:t});return e?(a=new Dt().decode(ct(e.rawPayload),0))==null?void 0:a[0]:null}async getContract(t){let{contract:e}=await this.operations.getContract({contractId:t});return e||null}async getContractBalance(t,e){let{contractBalance:a}=await this.operations.getContractBalance({contract:t.toB256(),asset:I(e)});return i(a.amount,10)}async getBalance(t,e){let{balance:a}=await this.operations.getBalance({owner:t.toB256(),assetId:I(e)});return i(a.amount,10)}async getBalances(t,e){return(await this.operations.getBalances({first:10,...e,filter:{owner:t.toB256()}})).balances.edges.map(n=>n.node).map(n=>({assetId:n.assetId,amount:i(n.amount)}))}async getMessages(t,e){return(await this.operations.getMessages({first:10,...e,owner:t.toB256()})).messages.edges.map(n=>n.node).map(n=>({sender:b.fromAddressOrString(n.sender),recipient:b.fromAddressOrString(n.recipient),nonce:i(n.nonce),amount:i(n.amount),data:wt.decodeData(n.data),daHeight:i(n.daHeight)}))}async getMessageProof(t,e){let a=await this.operations.getMessageProof({transactionId:t,messageId:e});return a.messageProof?{proofSet:a.messageProof.proofSet,proofIndex:i(a.messageProof.proofIndex),sender:b.fromAddressOrString(a.messageProof.sender),recipient:b.fromAddressOrString(a.messageProof.recipient),nonce:a.messageProof.nonce,amount:i(a.messageProof.amount),data:a.messageProof.data,signature:a.messageProof.signature,header:{id:a.messageProof.header.id,daHeight:i(a.messageProof.header.daHeight),transactionsCount:i(a.messageProof.header.transactionsCount),outputMessagesCount:i(a.messageProof.header.outputMessagesCount),transactionsRoot:a.messageProof.header.transactionsRoot,outputMessagesRoot:a.messageProof.header.outputMessagesRoot,height:i(a.messageProof.header.height),prevRoot:a.messageProof.header.prevRoot,time:a.messageProof.header.time,applicationHash:a.messageProof.header.applicationHash}}:null}async buildSpendPredicate(t,e,a,s,n=At,o,p){let c=await this.getResourcesToSpend(t.address,[[e,n]]),d={fundTransaction:!0,...o},g=new A({gasLimit:Ot,...d}),B;s&&t.types&&(B=new Oe().encode(t.types,s));let h=c.reduce((M,$)=>(g.addResource({...$,predicate:t.bytes,predicateData:B}),g.outputs=[],M.add($.amount)),i(0));g.addCoinOutput(a,h,n);let _=[];if(d.fundTransaction&&_.push(g.calculateFee()),_.length&&p){let M=await this.getResourcesToSpend(p,_);g.addResources(M)}return g}async submitSpendPredicate(t,e,a,s,n=At,o,p){var d;let c=await this.buildSpendPredicate(t,e,a,s,n,o,p);try{return await(await this.sendTransaction(c)).waitForResult()}catch(g){throw(((d=g==null?void 0:g.response)==null?void 0:d.errors)||[]).some(({message:h})=>h.includes("unexpected block execution error TransactionValidity(InvalidPredicate"))?new Error("Invalid Predicate"):g}}};export{rt as ChangeOutputCollisionError,lt as CoinStatus,W as CreateTransactionRequest,st as NoWitnessAtIndexError,nt as NoWitnessByOwnerError,K as Provider,A as ScriptTransactionRequest,z as TransactionResponse,k as TransactionType,Sa as buildBlockExplorerUrl,j as calculatePriceWithFactor,L as calculateTransactionFee,F as coinQuantityfy,Ie as getGasUsedFromReceipts,ht as getReceiptsWithMissingData,xt as inputify,O as isCoin,je as isMessage,St as isRawCoin,Ye as isRawMessage,Tt as normalizeJSON,ft as outputify,_t as returnZeroScript,Gt as sleep,Q as transactionRequestify,Ha as withdrawScript};
//# sourceMappingURL=index.mjs.map